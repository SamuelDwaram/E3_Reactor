<UserControl x:Class="E3Tech.RecipeBuilding.UserControls.RecipeBlockView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:E3Tech.RecipeBuilding.Converters"
             xmlns:helpers="clr-namespace:E3Tech.RecipeBuilding.Helpers"
             xmlns:local="clr-namespace:E3Tech.RecipeBuilding.Views"
             xmlns:controls="clr-namespace:E3Tech.RecipeBuilding.UserControls"
             mc:Ignorable="d"        
             Focusable="True"
             Background="White"
             BorderBrush="LightGray"
             BorderThickness="1"
             PreviewMouseDown="UserControl_PreviewMouseDown"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:RecipeBlockBackgroundColorConverter x:Key="RecipeBlockBackgroundColorConverter"/>
            <converters:RecipeStepExecutionStatusCheckerConverter x:Key="RecipeStepExecutionStatusChecker"/>
            <converters:ValueComparerCheckerConverter x:Key="ValueComparerConverter"/>
            <Style TargetType="MenuItem" x:Key="ContextMenuItemStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding}" Value="{x:Null}">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DataContext.DeleteBlockCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" ></KeyBinding>
    </UserControl.InputBindings>
    <Grid helpers:DataGridCellDropBehavior.DropCommand="{Binding DataContext.DropCellCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" 
          Tag="{Binding DataContext,RelativeSource={RelativeSource AncestorType=DataGrid}}">
        <Grid.InputBindings>
            <KeyBinding Key="F5" Command="{Binding DataContext.UpdateBlockCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" ></KeyBinding>
            <!--<MouseBinding MouseAction="LeftDoubleClick" 
                          Command="{Binding DataContext.ConfigureBlockCommand,RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                          CommandParameter="{Binding}"/>-->
        </Grid.InputBindings>
        <Border>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>

                        <!--#region Show animation on the Executing Recipe Block if the Recipe Block is not Start or End Block because they have other animations-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Parameters.Started}" Value="True"/>
                                <Condition Binding="{Binding Parameters.Name, Converter={StaticResource ValueComparerConverter}, ConverterParameter=End}" Value="False"/>
                                <Condition Binding="{Binding Parameters.Name, Converter={StaticResource ValueComparerConverter}, ConverterParameter=Start}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard x:Name="ExecutingRecipeBlockStoryboard">
                                    <Storyboard RepeatBehavior="Forever">
                                        <ColorAnimation To="Orange" BeginTime="0:0:0" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.5" FillBehavior="HoldEnd"/>
                                        <ColorAnimation To="Gray" BeginTime="0:0:0.5" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0:0:0.5" FillBehavior="HoldEnd"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ExecutingRecipeBlockStoryboard"/>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Parameters.Ended}" Value="True">
                            <DataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="ExecutingRecipeBlockStoryboard"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <!--#endregion-->

                        <!--#region Make Start Recipe Block always green-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Parameters.Name}" Value="Start"/>
                                <Condition Binding="{Binding Parameters.Started}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Green"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--#endregion-->

                        <!--#region Make End Recipe Block Red after completion-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Parameters.Name}" Value="End"/>
                                <Condition Binding="{Binding Parameters.Ended}" Value="True"/>

                                <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=DataContext.RecipeEnded}" Value="True"/>-->
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Red"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--#endregion-->

                        <!--#region Make Recipe Block Green after execution is completed-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Parameters.Ended}" Value="True"/>
                                <Condition Binding="{Binding Parameters.Name, Converter={StaticResource ValueComparerConverter}, ConverterParameter=End}" Value="False"/>
                                <Condition Binding="{Binding Parameters.Name, Converter={StaticResource ValueComparerConverter}, ConverterParameter=Start}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="Green"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <!--#endregion-->

                        <DataTrigger Binding="{Binding IsFocused}" Value="True">
                            <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                        <Trigger Property="ContextMenu.Visibility" Value="Visible">
                            <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <Grid  Width="{Binding RelativeSource= {RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=ActualWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" >
                <Label Content="{Binding Index}" HorizontalAlignment="Center" HorizontalContentAlignment="Center" FontWeight="Medium"  FontSize="28" VerticalAlignment="Center"></Label>
                <Label Content=" : " HorizontalAlignment="Center" HorizontalContentAlignment="Center" FontWeight="Medium"  FontSize="28" VerticalAlignment="Center"></Label>
            </StackPanel>
            <UniformGrid Grid.Column="1" Grid.IsSharedSizeScope="True">
                <Grid  >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Content="{Binding Parameters.UiLabel}" HorizontalAlignment="Left" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" FontWeight="Medium"  FontSize="28" VerticalAlignment="Center" Grid.RowSpan="2" Margin="20,0,0,0" />

                    <Grid x:Name="sourceGrid" Grid.Row="0" Grid.Column="1"  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="End">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Start">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Label Grid.Column="0" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" FontSize="16" VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                            <Setter Property="Content" Value="Equipment :"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                            <Setter Property="Content" Value="Source :"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                            <Setter Property="Content" Value="Source :"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                            <Setter Property="Content" Value="Source :"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="End">
                                            <Setter Property="Content" Value="End Time:"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Start">
                                            <Setter Property="Content" Value="Start Time:"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Grid.Column="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" FontSize="16" VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                            <Setter Property="Content" Value="{Binding Parameters.Destination}"/>
                                        </DataTrigger>


                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                            <Setter Property="Content" Value="{Binding Parameters.Source}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                            <Setter Property="Content" Value="{Binding Parameters.Source}"/>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                            <Setter Property="Content" Value="{Binding Parameters.Source}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="End">
                                            <Setter Property="Content" Value="{Binding Parameters.EndedTime}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Start">
                                            <Setter Property="Content" Value="{Binding Parameters.StartedTime}"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                    </Grid>

                    <Grid x:Name="destinationGrid" Grid.Column="1" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Label Grid.Column="0" HorizontalContentAlignment="Left" FontSize="16" VerticalContentAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="HeatCool">
                                            <Setter Property="Content" Value="Set Point :"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                            <Setter Property="Content" Value="Set Point :"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Dosing">
                                            <Setter Property="Content" Value="Remaining Dosable Amount :"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                            <Setter Property="Content" Value="Rem Time :"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Fill">
                                            <Setter Property="Content" Value="Volume :"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                            <Setter Property="Content" Value="Destination :"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Grid.Column="1" HorizontalContentAlignment="Left" FontSize="16" VerticalContentAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="HeatCool">
                                            <Setter Property="Content" Value="{Binding Parameters.SetPoint}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                            <Setter Property="Content" Value="{Binding Parameters.SetPoint}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                            <Setter Property="Content" Value="{Binding Parameters.RemainingTime}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Dosing">
                                            <Setter Property="Content" Value="{Binding Parameters.RemainingDosableAmount}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Fill">
                                            <Setter Property="Content" Value="{Binding Parameters.Volume}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                            <Setter Property="Content" Value="{Binding Parameters.Destination}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>

                    <Grid x:Name="TimeIntervalGrid" Grid.Row="0" Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>

                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Start">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="End">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Label Grid.Column="0" Content="Time Interval:" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" FontSize="16"/>

                        <Label Grid.Column="1" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalContentAlignment="Center"  FontSize="16">
                            <Label.Content>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="Parameters.TimeInterval" />
                                            <Binding Path="Parameters.IntervalType" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Label.Content>
                        </Label>
                    </Grid>

                    <Grid x:Name="ModeGrid" Grid.Row="1" Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Label Grid.Column="0" HorizontalContentAlignment="Left" FontSize="16" VerticalContentAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                            <Setter Property="Content" Value="Transfer Mode:"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                            <Setter Property="Content" Value="Transfer Mode:"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                            <Setter Property="Content" Value="Transfer Mode:"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                            <Setter Property="Content" Value="Transfer Mode::"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                            <Setter Property="Content" Value="Transfer Mode:"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Grid.Column="1" HorizontalContentAlignment="Left" FontSize="16" VerticalContentAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                            <Setter Property="Content" Value="Time"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                            <Setter Property="Content" Value="Time"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                            <Setter Property="Content" Value="Time"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                            <Setter Property="Content" Value="Time"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                            <Setter Property="Content" Value="{Binding Parameters.TransferModeString}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>

                    <Grid x:Name="StartedTimeGrid" Grid.Row="0" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.5*"/>
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="End">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Start">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Label Grid.Column="0" Content="Start Time:" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" FontSize="16"/>
                        <Label Grid.Column="1" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Content="{Binding Parameters.StartedTime}" FontSize="16"/>
                    </Grid>

                    <Grid x:Name="ReminingTimeGrid" Grid.Row="1" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Label Grid.Column="0" HorizontalContentAlignment="Left" FontSize="16" VerticalContentAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                            <Setter Property="Content" Value="Rem Time:"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                            <Setter Property="Content" Value="Rem Time:"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                            <Setter Property="Content" Value="Rem Time :"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                            <Setter Property="Content" Value="Rem Time :"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                            <Setter Property="Content" Value="Rem Time:"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Grid.Column="1" HorizontalContentAlignment="Left" FontSize="16" VerticalContentAlignment="Center">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Stirrer">
                                            <Setter Property="Content" Value="{Binding Parameters.RemainingTime}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Wait">
                                            <Setter Property="Content" Value="{Binding Parameters.RemainingTime}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Drain">
                                            <Setter Property="Content" Value="{Binding Parameters.RemainingTime}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="N2Purge">
                                            <Setter Property="Content" Value="{Binding Parameters.RemainingTime}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Parameters.Name}" Value="Transfer">
                                            <Setter Property="Content" Value="{Binding Parameters.RemainingTime}"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>
                </Grid>
            </UniformGrid>
        </Grid>
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Background" Value="{Binding Parameters.Name, Converter={StaticResource RecipeBlockBackgroundColorConverter}}"/>
            </Style>
        </Grid.Style>
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Update" 
                          Command="{Binding PlacementTarget.Tag.UpdateBlockCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                          CommandParameter="{Binding}">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource ContextMenuItemStyle}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>


                                <!--#region Disable add above Option for all blocks while Recipe is executing-->
                                <DataTrigger Binding="{Binding Parameters.Started}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <!--#region Disable add above option if RecipeEnded was true -->
                                <DataTrigger Binding="{Binding Parameters.Ended}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <!--#region Disable the Update command for start block -->
                                <DataTrigger Binding="{Binding Parameters.Name}" Value="Start">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <!--#region Disable the Update command for start block -->
                                <DataTrigger Binding="{Binding Parameters.Name}" Value="End">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->



                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding PlacementTarget.Tag.RecipeStatus, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True"/>
                                        <Condition Binding="{Binding PlacementTarget.Tag.IsEditEnabled, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="Delete" 
                          Command="{Binding PlacementTarget.Tag.DeleteBlockCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                          CommandParameter="{Binding}">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource ContextMenuItemStyle}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>

                                <!--#region Disable Delete option for start block always
                                    as users may delete start block before starting Recipe and then press start-->
                                <DataTrigger Binding="{Binding Parameters.Name}" Value="Start">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <!--#region Disable Delete Option for all blocks while Recipe is executing-->
                                <DataTrigger Binding="{Binding Parameters.Started}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <!--#region Disable delete option if RecipeEnded was true -->
                                <DataTrigger Binding="{Binding Parameters.Ended}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding PlacementTarget.Tag.RecipeStatus, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True"/>
                                        <Condition Binding="{Binding PlacementTarget.Tag.IsEditEnabled, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="AddAbove" 
                          Command="{Binding PlacementTarget.Tag.AddBlockExecutionCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                          CommandParameter="{Binding}">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource ContextMenuItemStyle}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>

                                <!--#region Disable Delete option for start block always
                                    as users may delete start block before starting Recipe and then press start-->
                                <DataTrigger Binding="{Binding Parameters.Name}" Value="Start">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <!--#region Disable add above Option for all blocks while Recipe is executing-->
                                <DataTrigger Binding="{Binding Parameters.Started}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <!--#region Disable add above option if RecipeEnded was true -->
                                <DataTrigger Binding="{Binding Parameters.Ended}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <!--#endregion-->

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding PlacementTarget.Tag.RecipeStatus, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True"/>
                                        <Condition Binding="{Binding PlacementTarget.Tag.IsEditEnabled, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>


                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
    </Grid>
</UserControl>
