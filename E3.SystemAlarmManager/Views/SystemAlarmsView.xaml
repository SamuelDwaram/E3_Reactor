<UserControl x:Class="E3.SystemAlarmManager.Views.SystemAlarmsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:E3.SystemAlarmManager.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:E3.ReactorManager.Interfaces.UI.Converters;assembly=E3.ReactorManager.Interfaces"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadSystemAlarmsCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <converters:ValueComparerCheckerConverter x:Key="ValueComparerCon"/>
        <Style TargetType="Button" x:Key="AlarmExpanderButtonStyle">
            <Setter Property="Foreground" Value="#FF8E94A1"/>
            <Setter Property="Background" Value="#272e3e"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Path" x:Key="AlarmExpanderPathStyle">
            <Setter Property="Margin" Value="25"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="RenderTransformOrigin" Value=".5,.5"/>
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Fill" Value="#FFF4F4F5"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="14*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="Filters" />
            <ComboBox x:Name="FilterSelector" Grid.Column="1" SelectedIndex="0" ItemsSource="{Binding AlarmsFilterTypeValues}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding FilterAlarmsCommand}" CommandParameter="{Binding ElementName=FilterSelector, Path=SelectedValue}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <DockPanel Grid.Column="2" x:Name="DevicesSelector">
                <Label Content="Device"/>
                <ComboBox ItemsSource="{Binding FieldDevices}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding SelectedDevice}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding FilterAlarmsCommand}" CommandParameter="{Binding ElementName=FilterSelector, Path=SelectedValue}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=FilterSelector, Path=SelectedValue}" Value="Device">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
            </DockPanel>
            <DockPanel Grid.Column="2" x:Name="AlarmTypeSelector">
                <Label Content="Alarm Type"/>
                <ComboBox ItemsSource="{Binding AlarmTypeValues}" SelectedValue="{Binding SelectedAlarmType}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding FilterAlarmsCommand}" CommandParameter="{Binding ElementName=FilterSelector, Path=SelectedValue}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=FilterSelector, Path=SelectedValue}" Value="Type">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
            </DockPanel>
            <DockPanel Grid.Column="2" x:Name="AlarmStateSelector">
                <Label Content="Alarm State"/>
                <ComboBox ItemsSource="{Binding AlarmStateValues}" SelectedValue="{Binding SelectedAlarmState}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding FilterAlarmsCommand}" CommandParameter="{Binding ElementName=FilterSelector, Path=SelectedValue}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=FilterSelector, Path=SelectedValue}" Value="State">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
            </DockPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="Foreground" Value="#8e94a1" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.3*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="Name"/>
            <Label Grid.Column="1" Content="Type"/>
            <Label Grid.Column="2" Content="Device"/>
            <Label Grid.Column="3" Content="State"/>
            <Label Grid.Column="4" Content="Time Stamp"/>
        </Grid>
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
            <ItemsControl>
                <ItemsControl.Style>
                    <Style TargetType="ItemsControl">
                        <Setter Property="ItemsSource" Value="{Binding FilteredAlarms}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=FilterSelector, Path=SelectedValue}" Value="None">
                                <Setter Property="ItemsSource" Value="{Binding SystemAlarms}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.Style>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Margin="2">
                            <DockPanel.Resources>
                                <Style TargetType="Grid" x:Key="BaseGridStyle">
                                    <Setter Property="Background" Value="#272e3e" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding State}" Value="Raised">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="Red" AutoReverse="True" Duration="0:0:1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="Acknowledged">
                                            <Setter Property="Background" Value="Orange" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="Resolved">
                                            <Setter Property="Background" Value="Green" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Resources>
                            <Grid DockPanel.Dock="Top" Height="50" Style="{StaticResource BaseGridStyle}">
                                <Grid.Resources>
                                    <Style TargetType="Label">
                                        <Setter Property="Foreground" Value="White" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="0.3*" />
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Content="{Binding Title}"/>
                                <Label Grid.Column="1" Content="{Binding Type}"/>
                                <Label Grid.Column="2" Content="{Binding DeviceLabel}"/>
                                <Label Grid.Column="3" Content="{Binding State}"/>
                                <Label Grid.Column="4">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Setter Property="Foreground" Value="White" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Content" Value="{Binding TimeStamp}" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ElementName=FilterSelector, Path=SelectedValue, Converter={StaticResource ValueComparerCon}, ConverterParameter=State}" Value="true"/>
                                                        <Condition Binding="{Binding Path=DataContext.SelectedAlarmState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="Raised"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Content" Value="{Binding RaisedTimeStamp}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ElementName=FilterSelector, Path=SelectedValue, Converter={StaticResource ValueComparerCon}, ConverterParameter=State}" Value="true"/>
                                                        <Condition Binding="{Binding Path=DataContext.SelectedAlarmState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="Acknowledged"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Content" Value="{Binding AcknowledgedTimeStamp}" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>

                                <Grid Grid.Column="5">

                                    <!--#region Horizontal Path Button-->
                                    <Button>
                                        <Viewbox>
                                            <Path Data="M12.5,6.5 C12.5,9.8137085 9.8137085,12.5 6.5,12.5 C3.1862915,12.5 0.5,9.8137085 0.5,6.5 C0.5,3.1862915 3.1862915,0.5 6.5,0.5 C9.8137085,0.5 12.5,3.1862915 12.5,6.5 z M30.5,6.5 C30.5,9.8137085 27.813708,12.5 24.5,12.5 C21.186292,12.5 18.5,9.8137085 18.5,6.5 C18.5,3.1862915 21.186292,0.5 24.5,0.5 C27.813708,0.5 30.5,3.1862915 30.5,6.5 z M48.5,6.5 C48.5,9.8137085 45.813708,12.5 42.5,12.5 C39.186292,12.5 36.5,9.8137085 36.5,6.5 C36.5,3.1862915 39.186292,0.5 42.5,0.5 C45.813708,0.5 48.5,3.1862915 48.5,6.5 z"
                                                Style="{StaticResource AlarmExpanderPathStyle}">
                                                <Path.RenderTransform>
                                                    <RotateTransform x:Name="AnimatedRotateTransform" Angle="90" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </Viewbox>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AlarmExpanderButtonStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=MoreInformationGrid,Path=Height}" Value="0">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=MoreInformationGrid,Path=Height}" Value="75">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Button.Triggers>
                                            <EventTrigger RoutedEvent="Button.Click">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="MoreInformationGrid"
                                                                    Storyboard.TargetProperty="Height"
                                                                    From="0" To="75"
                                                                    Duration="0:0:0.5"/>
                                                        <DoubleAnimation Storyboard.TargetName="MoreInformationGrid"
                                                                    Storyboard.TargetProperty="Height"
                                                                    From="75" To="0" BeginTime="0:0:5"
                                                                    Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Button.Triggers>
                                    </Button>
                                    <!--#endregion-->

                                    <!--#region Vertical Path Button-->
                                    <Button>
                                        <Viewbox>
                                            <Path Data="M12.5,6.5 C12.5,9.8137085 9.8137085,12.5 6.5,12.5 C3.1862915,12.5 0.5,9.8137085 0.5,6.5 C0.5,3.1862915 3.1862915,0.5 6.5,0.5 C9.8137085,0.5 12.5,3.1862915 12.5,6.5 z M30.5,6.5 C30.5,9.8137085 27.813708,12.5 24.5,12.5 C21.186292,12.5 18.5,9.8137085 18.5,6.5 C18.5,3.1862915 21.186292,0.5 24.5,0.5 C27.813708,0.5 30.5,3.1862915 30.5,6.5 z M48.5,6.5 C48.5,9.8137085 45.813708,12.5 42.5,12.5 C39.186292,12.5 36.5,9.8137085 36.5,6.5 C36.5,3.1862915 39.186292,0.5 42.5,0.5 C45.813708,0.5 48.5,3.1862915 48.5,6.5 z"
                                                Style="{StaticResource AlarmExpanderPathStyle}">
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="0" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </Viewbox>
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AlarmExpanderButtonStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=MoreInformationGrid,Path=Height}" Value="75">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=MoreInformationGrid,Path=Height}" Value="0">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Button.Triggers>
                                            <EventTrigger RoutedEvent="Button.Click">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="MoreInformationGrid"
                                                                    Storyboard.TargetProperty="Height"
                                                                    From="75" To="0"
                                                                    Duration="0:0:0.5"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Button.Triggers>
                                    </Button>
                                    <!--#endregion-->

                                </Grid>
                            </Grid>
                            <Grid x:Name="MoreInformationGrid" DockPanel.Dock="Top" Height="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <Grid.Resources>
                                    <Style TargetType="Label" x:Key="BaseLabelStyle">
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="Foreground" Value="White" />
                                    </Style>
                                </Grid.Resources>
                                <Label Content="{Binding RaisedTimeStamp}" Style="{StaticResource BaseLabelStyle}" ContentStringFormat="Raised : {0}" Grid.Row="0"/>
                                <Label Grid.Row="1">
                                    <Label.Style>
                                        <Style TargetType="Label" BasedOn="{StaticResource BaseLabelStyle}">
                                            <Setter Property="Content" Value="{Binding AcknowledgedTimeStamp}" />
                                            <Setter Property="ContentStringFormat" Value="Acknowledged : {0}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding AcknowledgedTimeStamp}" Value="01/01/0001 00:00:00">
                                                    <Setter Property="Content" Value="Not Acknowledged" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Grid>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>
