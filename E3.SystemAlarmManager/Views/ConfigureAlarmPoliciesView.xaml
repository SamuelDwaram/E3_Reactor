<UserControl x:Class="E3.SystemAlarmManager.Views.ConfigureAlarmPoliciesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:E3.SystemAlarmManager.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:E3.ReactorManager.Interfaces.UI.Converters;assembly=E3.ReactorManager.Interfaces"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="1366" d:DesignWidth="768">
    <UserControl.Resources>
        <converters:FontSizeConverter x:Key="FontSizeCon"/>
        <Style TargetType="Button" x:Key="CommonButtonStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#32ccdf"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#8e94a1" />
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource FontSizeCon}}" />
        </Style>
        <Style TargetType="Label" x:Key="AdminParametersLabelStyle">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource FontSizeCon}}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DataContext.IsAdminParametersViewOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=DataContext.IsAdminParametersViewOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="false">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#1d2532" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox" x:Key="AdminParametersTextBoxStyle">
            <Setter Property="Margin" Value="1" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#1d2532" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DataContext.IsAdminParametersViewOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=DataContext.IsAdminParametersViewOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="false">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBox" x:Key="AdminParametersComboBoxStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DataContext.IsAdminParametersViewOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=DataContext.IsAdminParametersViewOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="false">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="RadioButton" x:Key="AdminParametersRadioButton">
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource FontSizeCon}, ConverterParameter=0.8}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=DataContext.IsAdminParametersViewOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=DataContext.IsAdminParametersViewOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="false">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="#272e3e">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="6*" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="12*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="0.75*" />
                <ColumnDefinition Width="0.75*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
            <Label Content="Select Device" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <ComboBox x:Name="DeviceSelector" Grid.Column="1" VerticalContentAlignment="Center" SelectedValue="{Binding SelectedDevice}" DisplayMemberPath="Label" ItemsSource="{Binding AvailableDevices}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding UpdateDeviceAlarmPoliciesCommand}" CommandParameter="{Binding ElementName=DeviceSelector, Path=SelectedValue}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <Label Grid.Column="2" Content="Sort by" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource AdminParametersLabelStyle}"/>
            <RadioButton Grid.Column="3" GroupName="PolicyTypeSelector" Content="Individual">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding ReorderPoliciesCommand}" CommandParameter="Individual"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <RadioButton.Style>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource AdminParametersRadioButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DeviceAlarmPoliciesSortOrder}" Value="Individual">
                                <Setter Property="IsChecked" Value="True" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DeviceAlarmPoliciesSortOrder}" Value="Group">
                                <Setter Property="IsChecked" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Style>
            </RadioButton>
            <RadioButton Grid.Column="4" GroupName="PolicyTypeSelector" Content="Group">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Checked">
                        <i:InvokeCommandAction Command="{Binding ReorderPoliciesCommand}" CommandParameter="Group"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <RadioButton.Style>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource AdminParametersRadioButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DeviceAlarmPoliciesSortOrder}" Value="Individual">
                                <Setter Property="IsChecked" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DeviceAlarmPoliciesSortOrder}" Value="Group">
                                <Setter Property="IsChecked" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Style>
            </RadioButton>
            <Button Grid.Column="5" Command="{Binding ToggleAdminPopupCommand}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource CommonButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAdminParametersViewOpen}" Value="true">
                                <Setter Property="Content" Value="Hide Admin View" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsAdminParametersViewOpen}" Value="false">
                                <Setter Property="Content" Value="Show Admin View" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Grid Grid.Row="1" x:Name="AlarmPoliciesListHeaderGrid" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.25*"/>
                <ColumnDefinition Width="0.25*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="0.75*"/>
                <ColumnDefinition Width="0.25*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="Parameter"/>
            <Label Grid.Column="6" Content="Rated Value" Foreground="#8e94a1" Style="{StaticResource AdminParametersLabelStyle}"/>
            <Label Grid.Column="7" Content="Variation %" Foreground="#8e94a1" Style="{StaticResource AdminParametersLabelStyle}"/>
            <Label Grid.Column="4" Content="Variation Type" Foreground="#8e94a1" Style="{StaticResource AdminParametersLabelStyle}"/>
            <Label Grid.Column="5" Content="Title" Foreground="#8e94a1" Style="{StaticResource AdminParametersLabelStyle}"/>
            <Label Grid.Column="1" Content="Upper Limit"/>
            <Label Grid.Column="2" Content="Lower Limit"/>
            <Label Grid.Column="8" Content="Parameters Type" Foreground="#8e94a1" Style="{StaticResource AdminParametersLabelStyle}"/>
            <Label Grid.Column="9" Content="TimeStamp" Foreground="#8e94a1" Style="{StaticResource AdminParametersLabelStyle}"/>
            <Label Grid.Column="10" Content="Status" Foreground="#8e94a1" Style="{StaticResource AdminParametersLabelStyle}"/>
        </Grid>
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding DeviceAlarmPolicies}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="0.25*"/>
                                <ColumnDefinition Width="0.25*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="0.75*"/>
                                <ColumnDefinition Width="0.25*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="{Binding Parameters.Name}" Foreground="White" HorizontalContentAlignment="Left"/>
                            <TextBox Grid.Column="6" Text="{Binding Parameters.RatedValue}" Style="{StaticResource AdminParametersTextBoxStyle}"/>
                            <TextBox Grid.Column="7" Text="{Binding Parameters.VariationPercentage}" Style="{StaticResource AdminParametersTextBoxStyle}"/>
                            <Button Grid.Column="3" CommandParameter="{Binding Id}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CreatedTimeStamp}" Value="">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="True">
                                                <Setter Property="Content" Value="Disable" />
                                                <Setter Property="Command" Value="{Binding Path=DataContext.DisableAlarmPolicyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="False">
                                                <Setter Property="Content" Value="Enable" />
                                                <Setter Property="Command" Value="{Binding Path=DataContext.EnableAlarmPolicyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <ComboBox Grid.Column="4" ItemsSource="{Binding Parameters.VariationTypeValues}" Style="{StaticResource AdminParametersComboBoxStyle}" SelectedValue="{Binding Parameters.VariationType}"/>
                            <TextBox Grid.Column="5" Text="{Binding Title}" Style="{StaticResource AdminParametersTextBoxStyle}"/>
                            <TextBox Grid.Column="1" Text="{Binding Parameters.UpperLimit}"/>
                            <TextBox Grid.Column="2" Text="{Binding Parameters.LowerLimit}"/>
                            <ComboBox Grid.Column="8" ItemsSource="{Binding Parameters.ParametersTypeValues}" SelectedValue="{Binding Parameters.ParametersType}" Style="{StaticResource AdminParametersComboBoxStyle}"/>
                            <Label Grid.Column="9">
                                <Label.Style>
                                    <Style TargetType="Label" BasedOn="{StaticResource AdminParametersLabelStyle}">
                                        <Setter Property="Content" Value="{Binding CreatedTimeStamp}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CreatedTimeStamp}" Value="">
                                                <Setter Property="Content" Value="Not Created" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label Grid.Column="10" Content="{Binding Status}" Style="{StaticResource AdminParametersLabelStyle}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>
        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="1" Grid.Row="1" Content="Save Changes" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource CommonButtonStyle}" Command="{Binding SaveChangesInAlarmPoliciesCommand}"/>
        </Grid>
        <ContentControl Grid.Row="4" prism:RegionManager.RegionName="ConfigureFailures">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsAdminParametersViewOpen}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAdminParametersViewOpen}" Value="false">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
        <Popup HorizontalAlignment="Center" Placement="Center"
             VerticalAlignment="Center" Width="300" Height="300" IsOpen="{Binding IsAdminPopupStatusOpen}">
            <StackPanel Background="#1a202c">
                <DockPanel>
                    <Label Content="Admin User name" Width="150"/>
                    <TextBox Text="{Binding AdminCredentials.Username, UpdateSourceTrigger=PropertyChanged}"/>
                </DockPanel>
                <DockPanel>
                    <Label Content="Admin Password" Width="150"/>
                    <TextBox Text="{Binding AdminCredentials.Password, UpdateSourceTrigger=PropertyChanged}"/>
                </DockPanel>
                <Button Content="Validate" Command="{Binding ValidateAdminCredentialsCommand}" Margin="5" Style="{StaticResource CommonButtonStyle}"/>
            </StackPanel>
        </Popup>
    </Grid>
</UserControl>
